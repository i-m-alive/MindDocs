# syntax=docker/dockerfile:1.7
##############################################################################
#  DocuSense-AI · Front-End (Create-React-App, Node 18-alpine, multi-stage)  #
##############################################################################

########################  🔧  BUILD STAGE  ###################################
FROM node:18-alpine AS build
WORKDIR /app

# ── 1️⃣  Speed up & cache npm installs ──────────────────────────────────────
RUN --mount=type=cache,target=/root/.npm \
    npm config set fetch-retries 5                 && \
    npm config set fetch-retry-mintimeout 20000    && \
    npm config set fetch-retry-maxtimeout 90000

# ── 2️⃣  Install dependencies reproducibly ---------------------------------
# Copy ONLY the React project’s package.json + lockfile first (best cache hit)
COPY frontend/package*.json ./
RUN --mount=type=cache,target=/root/.npm \
    npm ci --legacy-peer-deps

# ── 3️⃣  Copy project source and build --------------------------------------
COPY frontend/ .
RUN npm run build                     # CRA -> /app/build  (adjust for Vite/etc.)

########################  🚀  RUNTIME STAGE  #################################
FROM node:18-alpine AS production
WORKDIR /app

# lightweight static-file server
RUN npm install -g serve

# copy the compiled bundle from the build stage
COPY --from=build /app/build ./build   # change build→dist if you switch to Vite

EXPOSE 3000
CMD ["serve", "-s", "build", "-l", "3000"]
